#Listes globales sur une table
liste.table.direction=vue_direction
liste.table.pole=vue_pole
liste.table.filiale=filiale_cli
liste.table.niveau=niveau
liste.table.niche=niche
liste.table.posteInvestissments=poste
liste.table.natureInvestissments=nature
liste.table.parametre=parametre
liste.table.ensAppli=ensemble_applicatif
liste.table.domaineBancaire=domaine_bancaire
liste.table.dossier_projet=dossier_projet


liste.parametre = PACK_LISTE_PARAMETRE.LISTER_PARAMETRE(?)
liste.parametre.in =
liste.parametre.out = 1:curseur:102

######################################################################################
#Toutes les procédures appelées pour les listes dynamiques
#####################################################################################

################ BRANCHES / DIRECTIONS / DPG / CLICODE ############################
#Liste des directions/branches ME (dirmels.sql, mDpgAd.jsp)
liste.dirme = PACK_LISTE_DIRME.LISTER_DIRME(?,?)
liste.dirme.in = 1:userid:1
liste.dirme.out = 2:curseur:102

#Liste des directions ME (dirmels.sql)
liste.dirme_notif = PACK_LISTE_DIRME.LISTER_DIRME_NOTIF(?,?,?)
liste.dirme_notif.in = 1:test:1;2:userid:1
liste.dirme_notif.out = 3:curseur:102


#Liste des directions/branches MO (dirmols.sql, mClientAd.jsp)
liste.dirmo = PACK_LISTE_DIRMO.LISTER_DIRMO(?,?)
liste.dirmo.in = 1:userid:96
liste.dirmo.out = 2:curseur:102

#Liste des directions MO pour notification (dirmols.sql)
liste.dirmo_notif = PACK_LISTE_DIRMO.LISTER_DIRMO_NOTIF(?,?)
liste.dirmo_notif.in = 1:userid:96
liste.dirmo_notif.out = 2:curseur:102

#Liste des clients MO pour notification (dirmols.sql)
liste.code_mo_notif = PACK_LISTE_DIRMO.LISTER_CODMO_NOTIF(?,?,?)
liste.code_mo_notif.in = 1:dirmo_partie:1;2:userid:96
liste.code_mo_notif.out = 3:curseur:102

#Liste des dpg pour menu administrateur local : ls_chgrp.sql
liste.dpg = PACK_LISTE_GROUPE.LISTER_GROUPE(?,?)
liste.dpg.in = 1:userid:1
liste.dpg.out = 2:curseur:102

#PPM 59288 -  Liste des branches et direction Bip principalement concernée : ls_chdir.sql
liste.dir_prin = PACK_LISTE_DIRECTION.LISTER_DIR_PRIN(?,?)
liste.dir_prin.in = 1:userid:1
liste.dir_prin.out = 2:curseur:102

#Liste des clicodes pour menu client : ls_chdir.sql
liste.client = PACK_LISTE_DIRECTION.LISTER_DIRECTION(?,?)
liste.client.in = 1:userid:1
liste.client.out = 2:curseur:102

#Liste des clicodes pour menu CDG client : dirclient_ls.sql
liste.directionMo = PACK_LISTE_DIRECTION_MO.LISTER_DIRECTION_MO(?,?)
liste.directionMo.in = 1:userid:1
liste.directionMo.out = 2:curseur:102

#Liste des departements pour budget des activite JH : ls_departement.sql
liste.departement = PACK_LISTE_DEPARTEMENT.LISTER_DEPARTEMENT(?)
liste.departement.in =
liste.departement.out = 1:curseur:102

#Liste des departements pour etat Organisation : ls_departement.sql
liste.departementMe = PACK_LISTE_DEPARTEMENT.LISTER_DEPARTEMENT_ME(?)
liste.departementMe.in =
liste.departementMe.out = 1:curseur:102

#Liste des fournisseurs (agencels.sql, fmFourniseurAd.jsp)
liste.fournisseur = PACK_LISTE_AGENCE.LISTER_AGENCE(?,?)
liste.fournisseur.in = 1:keyList0:1
liste.fournisseur.out = 2:curseur:102

#Liste des fournisseurs Expense Bis (fournisseursebis.sql, fmFourniseurEbisAd.jsp)
liste.fournisseurEbis = PACK_LISTE_FOURNISSEUR_EBIS.LISTER_FOURNISSEUR_EBIS(?,?)
liste.fournisseurEbis.in = 1:keyList0:1
liste.fournisseurEbis.out = 2:curseur:102

#Liste des immeubles (immeubls.sql, fmImmeubleAd.jsp)
liste.immeuble = PACK_LISTE_IMMEUBLE.LISTER_IMMEUBLE(?,?)
liste.immeuble.in = 1:userid:1
liste.immeuble.out = 2:curseur:102

#Liste des niveaux  (niveau.sql, mSituPersAd.jsp)
liste.niveau = PACK_LISTE_NIVEAU.LISTER_NIVEAU(?,?)
liste.niveau.in = 1:userid:1
liste.niveau.out = 2:curseur:102

#Liste des tops amortissables pour les centres d'activité (ca_mols.sql, fmCamoAd.jsp)
liste.ctopact = PACK_LISTE_TOP_AMORT.LISTER_TOP_AMORT(?,?)
liste.ctopact.in = 1:userid:1
liste.ctopact.out = 2:curseur:102

#Liste des dpg bas et hauts de l'année pour les couts standards(lisdpgst.sql, bStandardAd.jsp)
liste.coutstandard_sg = PACK_LISTE_COUTSTANDARD.LISTER_COUTSTANDARD_SG(?,?,?)
liste.coutstandard_sg.in = 1:keyList0:1;2:userid:1
liste.coutstandard_sg.out = 3:curseur:102

liste.coutstandard = PACK_LISTE_COUTSTANDARD.LISTER_COUTSTANDARD(?,?,?)
liste.coutstandard.in = 1:keyList0:1;2:userid:1
liste.coutstandard.out = 3:curseur:102

#Liste des dpg bas et hauts de l'année pour les couts standards en KE (coutKE.sql, bStandardKEAd.jsp)
liste.coutstandard_ke = PACK_COUT_STANDARD_KE.LISTER_COUTSTANDARD_KE(?,?,?)
liste.coutstandard_ke.in = 1:keyList0:1;2:userid:1
liste.coutstandard_ke.out = 3:curseur:102

################ Dossier projets / Projets / Lignes BIP #########################
#Liste des sous-systeme
liste.sous_systeme = PACK_NPSI.LISTER_SOUS_SYSTEME(?,?)
liste.sous_systeme.in = 
liste.sous_systeme.out = 1:curseur:102;2:message:1

#Liste des sous-systeme actif
liste.sous_systeme_actif = PACK_NPSI.LISTER_SOUS_SYSTEME_ACTIF(?,?)
liste.sous_systeme_actif.in = 
liste.sous_systeme_actif.out = 1:curseur:102;2:message:1

#Liste des sous-systeme actif sans les valeur par defaut (a rattacher, hors perimetre)
liste.sous_systeme_sans = PACK_NPSI.LISTER_SOUS_SYSTEME_SANS(?,?)
liste.sous_systeme_sans.in = 
liste.sous_systeme_sans.out = 1:curseur:102;2:message:1

#Liste des Domaines 
liste.domaine_npsi = PACK_NPSI.LISTER_DOMAINE(?,?)
liste.domaine_npsi.in = 
liste.domaine_npsi.out = 1:curseur:102;2:message:1

#Liste des Domaines actifs
liste.domaine_npsi_actif = PACK_NPSI.LISTER_DOMAINE_ACTIF(?,?)
liste.domaine_npsi_actif.in = 
liste.domaine_npsi_actif.out = 1:curseur:102;2:message:1

#Liste des sous-systeme actif sans les valeur par defaut (a rattacher, hors perimetre)
liste.domaine_npsi_sans = PACK_NPSI.LISTER_DOMAINE_SANS(?,?)
liste.domaine_npsi_sans.in = 
liste.domaine_npsi_sans.out = 1:curseur:102;2:message:1

#Liste des bloc
liste.bloc_npsi = PACK_NPSI.LISTER_BLOC(?,?)
liste.bloc_npsi.in = 
liste.bloc_npsi.out = 1:curseur:102;2:message:1

#Liste des bloc actifs
liste.bloc_actif_npsi = PACK_NPSI.LISTER_BLOC_ACTIF(?,?)
liste.bloc_actif_npsi.in = 
liste.bloc_actif_npsi.out = 1:curseur:102;2:message:1

#Liste des dossiers projets actifs : ls_doss_proj.sql
liste.dossier_projet = PACK_LISTE_DOSSIER_PROJET.LISTER_DOSSIER_PROJET(?,?)
liste.dossier_projet.in = 1:userid:1
liste.dossier_projet.out = 2:curseur:102

#PPM 59288 : Liste des dossiers projets actifs pour lignes non GT1 : ls_doss_proj.sql
liste.dossier_projet_nonGT1 = PACK_LISTE_DOSSIER_PROJET.LISTER_DOSSIER_PROJET_NONGT1(?,?)
liste.dossier_projet_nonGT1.in = 1:userid:1
liste.dossier_projet_nonGT1.out = 2:curseur:102

#PPM 59288 : Liste des directions liées au paramètre DBS : ls_doss_proj.sql
liste.listedirectionsdbs = PACK_LISTE_DOSSIER_PROJET.LISTE_DIRECTIONS_DBS(?,?)
liste.listedirectionsdbs.in = 
liste.listedirectionsdbs.out = 1:curseur:102;2:message:1

#Liste des dossiers projets actifs par ordre alphabétique : ls_doss_proj.sql
liste.dprojet_alpha = PACK_LISTE_DOSSIER_PROJET.LISTER_DPROJET_ALPHA(?,?)
liste.dprojet_alpha.in = 1:userid:1
liste.dprojet_alpha.out = 2:curseur:102

#Liste des dossiers projets actifs et non actifs classés par code et avec la valeur 'TOUS' : ls_doss_proj.sql
liste.dprojet_par_code01 = PACK_LISTE_DOSSIER_PROJET.LISTER_DPROJET_PAR_CODE01(?,?)
liste.dprojet_par_code01.in = 1:userid:1
liste.dprojet_par_code01.out = 2:curseur:102

#Liste des dossiers projets actifs et non actifs classés par code SANS la valeur 'TOUS' : ls_doss_proj.sql
liste.dprojet_par_code02 = PACK_LISTE_DOSSIER_PROJET.LISTER_DPROJET_PAR_CODE02(?,?)
liste.dprojet_par_code02.in = 1:userid:1
liste.dprojet_par_code02.out = 2:curseur:102

#Liste des projets pour un dossier projet donné : ls_projet.sql
liste.projet = PACK_LISTE_PROJ_INFO.LISTER_PROJET(?,?,?)
liste.projet.in = 1:userid:1;2:dpcode:1
liste.projet.out = 3:curseur:102

#Liste des projets pour un dossier projet donné par ordre alphabétique: ls_projet.sql
liste.projet_alpha = PACK_LISTE_PROJ_INFO.LISTER_PROJET_ALPHA(?,?,?)
liste.projet_alpha.in = 1:userid:1;2:dpcode:1
liste.projet_alpha.out = 3:curseur:102

#Liste des projets pour un dossier projet pour la notification : ls_projet.sql
liste.projet_notif = PACK_LISTE_PROJ_INFO.LISTER_PROJET_NOTIF(?,?,?)
liste.projet_notif.in = 1:userid:1;2:dpcode:1
liste.projet_notif.out = 3:curseur:102


#Liste des types 1=type de projets (type1ls.sql, mLignebipAd.jsp)
liste.type1 = PACK_LISTE_TYPE_PROJET.LISTER_TYPE_PROJET(?,?)
liste.type1.in = 1:userid:1
liste.type1.out = 2:curseur:102

#Liste des types 2=type activite (type2ls.sql, mLignebipAd.jsp)
liste.type2 = PACK_LISTE_TYPE_ACTIVITE.LISTER_TYPE_ACTIVITE(?,?,?)
liste.type2.in = 1:userid:1;2:typproj:1
liste.type2.out = 3:curseur:102

#Liste des sous tyoplogies 
liste.sous_typo = PACK_LISTE_SOUS_TYPE.LISTER_SOUS_TYPO(?,?,?)
liste.sous_typo.in = 1:userid:1;2:sous_typo:1
liste.sous_typo.out = 3:curseur:102

        
#Liste de tous les types d'activités de manière détaillé (type2ls.sql, fmType2Ad.jsp)
liste.descr_type2 = PACK_LISTE_TYPE_ACTIVITE.LISTER_TYPE2(?,?)
liste.descr_type2.in = 1:userid:1
liste.descr_type2.out = 2:curseur:102

#Liste des projets speciaux(prjspcls.sql, fmProjspecAd.jsp)
liste.projspec = PACK_LISTE_PROJ_SPE.LISTER_PROJ_SPE(?,?)
liste.projspec.in = 1:userid:1
liste.projspec.out = 2:curseur:102

#Liste des metier (ls_metier.sql)
liste.metier = PACK_LISTE_METIER.LISTER_METIER(?,?)
liste.metier.in = 1:userid:1
liste.metier.out = 2:curseur:102

#Liste des metier selon le codsg(ls_rubrique.sql)
liste.rubrique_metier = PACK_LISTE_RUBRIQUE.LISTER_RUBRIQUE_METIER(?,?,?)
liste.rubrique_metier.in = 1:userid:1;2:codsg:1
liste.rubrique_metier.out = 3:curseur:102

#Liste des metier selon le codsg et le type de Projet(ls_rubrique.sql)
liste.rubrique_metier_type = PACK_LISTE_RUBRIQUE.LISTER_RUBRIQUE_METIER_TYPE(?,?,?,?,?)
liste.rubrique_metier_type.in = 1:userid:1;2:codsg:1;3:typproj:1;4:ca_payeur:1
liste.rubrique_metier_type.out = 5:curseur:102

#Liste des metiers avec TOUS (ls_metier.sql)
liste.metier_tous = PACK_LISTE_METIER.LISTER_METIER_TOUS(?,?)
liste.metier_tous.in = 1:userid:1
liste.metier_tous.out = 2:curseur:102

#Liste des codes statut (astatut) pour les lignes BIP (cdstlist.sql)
liste.astatut = PACK_LISTE_CODE_STATUT.LISTER_STATUTS_LIGNE_BIP(?,?)
liste.astatut.in = 1:userid:1
liste.astatut.out = 2:curseur:102

#Liste des codes statut (astatut) pour les projets(cdstlist.sql)
liste.pstatut = PACK_LISTE_CODE_STATUT.LISTER_STATUTS_PROJET(?,?)
liste.pstatut.in = 1:userid:1
liste.pstatut.out = 2:curseur:102

#Liste des CA (mProjetAd.jsp, mApplicationAd.jsp, ls_ca.sql)
liste.ca = PACK_LISTE_CA.LISTER_CA(?,?)
liste.ca.in = 1:userid:1
liste.ca.out = 2:curseur:102

################### Centres de frais #################################
#Liste des BDDPG composant un centre de frais :ls_cfcompo.sql, bCompocfAd.jsp (16/06/2003:NBM)
liste.compocfrais = PACK_LISTE_CFRAIS_COMPO.LISTER_CFRAIS_COMPO(?,?,?)
liste.compocfrais.in = 1:keyList0:1;2:userid:1
liste.compocfrais.out = 3:curseur:102

#Liste des branches ou directions ou departements ou poles pour composition des centres de frais:ls_cfrais_habili
#ls_cfrais_habili,mHabiliacfAd.jsp (17/06/2003:NBM)
liste.dpgcfrais = PACK_LISTE_DPG_CFRAIS.LISTER_DPG_CFRAIS(?,?,?,?)
liste.dpgcfrais.in = 1:keyList0:1;2:keyList1:1;3:userid:1
liste.dpgcfrais.out = 4:curseur:102


################### Situations de ressources #################################
# liste des situations d'une personne : 
liste.situpers = PACK_LISTE_SITUATION_PERSONNE.LISTER_SITUATION_PERSONNE(?,?,?)
liste.situpers.in = 1:keyList0:96;2:userid:1
liste.situpers.out = 3:curseur:102

liste.situress = PACK_CONSULT_RESS.LISTER_SITU(?,?,?,?,?,?,?)
liste.situress.in = 1:ident:1;2:debnom:1;3:nomcont:1;4:userid:1;5:matricule:1;6:igg:1
liste.situress.out = 7:curseur:102

liste.selectress = PACK_CONSULT_RESS.LISTER_RESS(?,?,?,?,?,?)
liste.selectress.in = 1:debnom:1;2:nomcont:1;3:userid:1;4:matricule:1;5:igg:1
liste.selectress.out = 6:curseur:102

liste.selectressigg = PACK_RESSOURCE_P.LISTER_RESS_IGG(?,?,?,?,?,?)
liste.selectressigg.in = 1:igg:1;2:matricule:1;3:debnom:1;4:nomcont:1;5:userid:1
liste.selectressigg.out = 6:curseur:102

liste.selectressdoublon = PACK_RESSOURCE_P.select_ressource_double(?,?,?)
liste.selectressdoublon.in = 1:id_personne_col:1;2:userid:1
liste.selectressdoublon.out = 3:curseur:102

#Liste des situations d'un logiciel:perlog.sql, fmSitulogAd.jsp (23/06/2003:NBM)
liste.situlog = PACK_LISTE_SITUATION_LOGICIEL.LISTER_SITUATION_LOGICIEL(?,?,?)
liste.situlog.in = 1:keyList0:96;2:userid:1
liste.situlog.out = 3:curseur:102

#Liste des situations d'un forfait :frflog.sql, fmSituforfAd.jsp (25/06/2003:NBM)
liste.situforf = PACK_LISTE_SITUATION_FORFAIT.LISTER_SITUATION_FORFAIT(?,?,?)
liste.situforf.in = 1:keyList0:96;2:userid:1
liste.situforf.out = 3:curseur:102


################### ISAC #################################
#Liste Chefs de Projet pour ISAC : isac_lscpident.sql, eIemens2.jsp
liste.isac_cpident = pack_liste_isac_cpident.lister_isac_cpident(?,?)
liste.isac_cpident.in = 1:userid:1
liste.isac_cpident.out = 2:curseur:102

#Liste des lignes BIP pour ISAC (Structure des lignes BIP : editions) : isac_lspid.sql, eStructLbSr.jsp
liste.isac_pid = PACK_LISTE_ISAC_PID.LISTER_ISAC_PID(?,?)
liste.isac_pid.in = 1:userid:1
liste.isac_pid.out = 2:curseur:102

#Liste des lignes BIP pour ISAC (Structure des lignes BIP : modifs) : isac_lspid.sql, bStructLbSr.jsp
liste.isac_pid_modif = PACK_LISTE_ISAC_PID.LISTER_ISAC_PID_MODIF(?,?)
liste.isac_pid_modif.in = 1:userid:1
liste.isac_pid_modif.out = 2:curseur:102

#Liste des etapes pour ISAC (Structure des lignes BIP) : isac_lsetape.sql, fmEtape.jsp
liste.isac_etape = PACK_LISTE_ISAC_ETAPE.LISTER_ISAC_ETAPE(?,?,?)
liste.isac_etape.in = 1:keyList0:1;2:userid:1
liste.isac_etape.out = 3:curseur:102

#Liste des taches pour ISAC (Structure des lignes BIP) : isac_lstache.sql, fmTache.jsp
liste.isac_tache = PACK_LISTE_ISAC_TACHE.LISTER_ISAC_TACHE(?,?,?,?)
liste.isac_tache.in = 1:keyList0:1;2:keyList1:1;3:userid:1
liste.isac_tache.out = 4:curseur:102

#Liste des etapes/taches pour gestion des sous-tâches (Structure des lignes BIP) : isac_lstachelb.sql, fSoustache.jsp
liste.isac_tachelb = PACK_LISTE_ISAC_TACHELB.LISTER_ISAC_TACHELB(?,?,?)
liste.isac_tachelb.in = 1:keyList0:1;2:userid:1
liste.isac_tachelb.out = 3:curseur:102

#Liste des sous_taches pour ISAC (Structure des lignes BIP) : isac_lsoustache.sql, fmSoustache.jsp
liste.isac_sousTache = PACK_LISTE_ISAC_SOUS_TACHE.LISTER_ISAC_SOUS_TACHE(?,?,?,?,?,?,?)
liste.isac_sousTache.in = 1:keyList0:1;2:keyList1:1;3:keyList2:1;4:keyList3:1;5:keyList4:1;6:userid:1
liste.isac_sousTache.out = 7:curseur:102

#Liste des ressources pour ISAC : isac_lsresscons.sql, eIdetconsSr.jsp
liste.isac_resscons = pack_liste_isac_resscons.lister_isac_resscons(?,?)
liste.isac_resscons.in = 1:userid:1
liste.isac_resscons.out = 2:curseur:102

liste.isac_ressfavcons = pack_liste_isac_resscons.lister_isac_ressfavcons(?,?)
liste.isac_ressfavcons.in = 1:userid:1
liste.isac_ressfavcons.out = 2:curseur:102

liste.ress_hab = pack_liste_isac_resscons.lister_ress_hab(?,?)
liste.ress_hab.in = 1:userid:1
liste.ress_hab.out = 2:curseur:102

#Liste des ressources pour ISAC affectées à une sous_tache
liste.isac_resscons_aff = pack_liste_isac_resscons.lister_isac_resscons_aff(?,?)
liste.isac_resscons_aff.in = 1:userid:1
liste.isac_resscons_aff.out = 2:curseur:102

#Liste des DPG des lignes BIP pour lesquelles il existe une affectation et ce,  
# pour toutes les ressources rattachées au CP. pour ISAC. : isac_lsresscons.sql, fSaisieConsoSr.jsp
liste.isac_dpg = pack_liste_isac_resscons.lister_isac_dpg(?,?,?)
liste.isac_dpg.in = 1:userid:1;2:ident:1
liste.isac_dpg.out = 3:curseur:102

#Liste des sous_taches d'une ressource pour ISAC : isac_lsrestache.sql,
liste.isac_restache = PACK_LISTE_ISAC_RESTACHE.LISTER_ISAC_RESTACHE(?,?,?)
liste.isac_restache.in = 1:keyList0:1;2:userid:1
liste.isac_restache.out = 3:curseur:102

#Liste des sous_taches à affecter à une ressource pour ISAC : isac_lsoustachelb.sql
liste.isac_sstachelb = PACK_LISTE_ISAC_SSTACHELB.LISTER_ISAC_SSTACHELB(?,?,?,?)
liste.isac_sstachelb.in = 1:keyList0:1;2:keyList1:1;3:userid:1
liste.isac_sstachelb.out = 4:curseur:102

#Liste des lignes BIP à copier pour ISAC (Copie structure) : isac_copie.sql, fCopieStructureSr.jsp
liste.isac_copie_pid1 = PACK_ISAC_COPIE.LISTER_PID1(?,?)
liste.isac_copie_pid1.in = 1:userid:1
liste.isac_copie_pid1.out = 2:curseur:102

#Liste des lignes BIP à remplir pour ISAC (Copie structure) : isac_copie.sql, fCopieStructureSr.jsp
liste.isac_copie_pid2 = PACK_ISAC_COPIE.LISTER_PID2(?,?)
liste.isac_copie_pid2.in = 1:userid:1
liste.isac_copie_pid2.out = 2:curseur:102

#Liste des ressources origines pour ISAC (Copier affcetation ressource) : isac_copie.sql, fCopieAffcetationSr.jsp
liste.isac_copie_ident1 = PACK_ISAC_COPIE.LISTER_IDENT1(?,?)
liste.isac_copie_ident1.in = 1:userid:1
liste.isac_copie_ident1.out = 2:curseur:102

#Liste des ressources déstinations pour ISAC (Copier affcetation ressource) : isac_copie.sql, fCopieAffcetationSr.jsp
liste.isac_copie_ident2 = PACK_ISAC_COPIE.LISTER_IDENT2(?,?)
liste.isac_copie_ident2.in = 1:userid:1
liste.isac_copie_ident2.out = 2:curseur:102


#liste des sous-taches à copier : isac_copiercollerliste.sql, fSoustachecopierSr.jsp, mSoustachecopierSr.jsp
liste.isac_sstachelb_copier = pack_liste_isac_tachelb_copier.lister_isac_sstachelb_copier(?,?,?)
liste.isac_sstachelb_copier.in = 1:keyList0:1;2:userid:1
liste.isac_sstachelb_copier.out = 3:curseur:102

#liste des taches ou seront coller la sous-tache choisie : isac_copiercollerliste.sql, fSoustachecopierSr.jsp, mSoustachecopierSr.jsp
liste.isac_sstachelb_coller = pack_liste_isac_tachelb_copier.lister_isac_sstachelb_coller(?,?,?)
liste.isac_sstachelb_coller.in = 1:keyList1:1;2:userid:1
liste.isac_sstachelb_coller.out = 3:curseur:102


################### Bouclage JH #################################
#Liste matricule : ls_bjhnom.sql
liste.matricule = PACK_LISTE_BJH_MATRICULE.LISTER_BJH_MATRICULE(?,?,?)
liste.matricule.in = 1:keyList0:1;2:userid:1
liste.matricule.out = 3:curseur:102

#Liste anomalies : ls_anomalies.sql
liste.anomalies = PACK_LISTE_BJH_ANOMALIES.LISTER_BJH_ANOMALIES(?,?,?,?)
liste.anomalies.in = 1:keyList0:1;2:keyList1:1;3:userid:1
liste.anomalies.out = 4:curseur:102


################### Ordonnacement #################################
#Liste des lignes contrats (menu Ordonnancement) : clstcont.sql
liste.lignesContrat = PACK_LISTE_CONTRESS.LISTER_CONTRESS(?,?,?,?,?)
liste.lignesContrat.in = 1:keyList0:1;2:keyList1:1;3:keyList2:1;4:userid:1
liste.lignesContrat.out = 5:curseur:102

#Liste des contrats (menu Ordonnancement/Facture/Gestion/Facture) : fliscont.sql
liste.contrats = PACK_LISTE_CONTRATS.LISTER_CONTRATS(?,?,?,?,?,?,?,?,?,?)
liste.contrats.in =1:keyList0:1;2:keyList1:1;3:keyList2:1;4:keyList3:1;5:keyList4:1;6:keyList5:1;7:keyList6:1;8:keyList7:1;9:userid:1
liste.contrats.out = 10:curseur:102

#Liste des lignes facture (menu Ordonnancement) : flisligf.sql
liste.lignesFacture = PACK_LISTE_LIGNES_FACT.LISTER_LIGNES_FACT(?,?,?,?,?,?,?,?,?,?)
liste.lignesFacture.in =1:keyList0:1;2:keyList1:1;3:keyList2:1;4:keyList3:1;5:keyList4:1;6:keyList5:1;7:keyList6:1;8:keyList7:1;9:userid:1
liste.lignesFacture.out = 10:curseur:102

#Liste des identifiants des ressources (menu Ordonnancement) : flisress.sql
liste.identress = PACK_LISTE_RESSCONT.LISTER_RESSCONT(?,?,?,?,?,?,?,?,?,?)
liste.identress.in =1:keyList0:1;2:keyList1:1;3:keyList2:1;4:keyList3:1;5:keyList4:1;6:keyList5:1;7:keyList6:1;8:keyList7:1;9:userid:1
liste.identress.out = 10:curseur:102

################### MENU PAR REFERENTIELS #################################
#Liste des dossiers projets actifs de l'habilitation SUIVI_PROJET : ls_doss_proj.sql
liste.dprojet_ref = PACK_LISTE_DOSSIER_PROJET.LISTER_DPROJET_REF(?,?)
liste.dprojet_ref.in = 1:userid:1
liste.dprojet_ref.out = 2:curseur:102

#Liste des dossiers projets actifs de l'habilitation SUIVI_PROJET : ls_doss_proj.sql
liste.dprojet_limitation_ref = PACK_LISTE_DOSSIER_PROJET.LISTER_DPROJET_LIMITATION_REF(?,?)
liste.dprojet_limitation_ref.in = 1:userid:1
liste.dprojet_limitation_ref.out = 2:curseur:102

#Liste des dossiers projets actifs pour la notification : ls_doss_proj.sql
liste.dprojet_notif = PACK_LISTE_DOSSIER_PROJET.LISTER_DPROJET_NOTIF(?,?)
liste.dprojet_notif.in = 1:userid:1
liste.dprojet_notif.out = 2:curseur:102

#Liste des projets actifs de l'habilitation SUIVI_PROJET : ls_projet.sql
liste.projet_ref = PACK_LISTE_PROJ_INFO.LISTER_PROJET_REF(?,?)
liste.projet_ref.in = 1:userid:1
liste.projet_ref.out = 2:curseur:102

#Liste des projets actifs de l'habilitation SUIVI_PROJET : ls_projet.sql + (Pas de limitation)
liste.projet_limitation_ref = PACK_LISTE_PROJ_INFO.LISTER_PROJET_LIMITATION_REF(?,?)
liste.projet_limitation_ref.in = 1:userid:1
liste.projet_limitation_ref.out = 2:curseur:102

#Liste des applications actives de l'habilitation SUIVI_PROJET : ls_appli.sql
liste.appli_ref = PACK_LISTE_APPLI.LISTER_APPLI_REF(?,?)
liste.appli_ref.in = 1:userid:1
liste.appli_ref.out = 2:curseur:102

#Liste des applications actives de l'habilitation SUIVI_PROJET (+ pas de limitation) : ls_appli.sql
liste.appli_limitation_ref = PACK_LISTE_APPLI.lister_appli_limitation_ref(?,?)
liste.appli_limitation_ref.in = 1:userid:1
liste.appli_limitation_ref.out = 2:curseur:102

#Liste des types de dossiers projets : ls_type_doss_proj.sql
liste.type_doss_proj = PACK_LISTE_TYPE_DOSS_PROJ.LISTER_TYPE_DOSS_PROJ(?,?)
liste.type_doss_proj.in = 1:userid:1
liste.type_doss_proj.out = 2:curseur:102

#Liste des CENTRE de frais pour la liste des code de centre de frais donné en parametre(22/06/2005:BAA)
liste.centresfrais = PACK_LISTE_CFRAIS.LISTER_CENTRES_FRAIS(?,?)
liste.centresfrais.in = 1:liste_Centres_Frais:1;
liste.centresfrais.out = 2:curseur:102

################### suivi des investissements #################################
liste.type.investissements = PACK_LISTE_INVESTISSEMENTS.LISTER_TYPE(?,?)
liste.type.investissements.in = 1:userid:1
liste.type.investissements.out = 2:curseur:102

liste.ligne_inv = PACK_LISTE_INVESTISSEMENTS.LISTER_LIGNE_INV(?,?,?,?)
liste.ligne_inv.in = 1:userid:1;2:codcamo:1;3:annee:1
liste.ligne_inv.out = 4:curseur:102

#Liste des extractions paramétrées dans Export sur PC/Audit fonctionnel
liste.extraction = PACK_LISTE_EXTRACTION.LISTER_EXTRACTION (?,?)
liste.extraction.in = 1:userid:96
liste.extraction.out = 2:curseur:102

#Liste des profils disponibles
liste.profil = PACK_LISTE_PROFIL.LISTER_PROFIL(?,?)
liste.profil.in = 1:userid:96
liste.profil.out = 2:curseur:102

#Liste des profils disponibles
liste.lien_profil_actu = PACK_LISTE_PROFIL.LISTER_PROFIL_ACTU(?,?,?)
liste.lien_profil_actu.in = 1:userid:96;2:code_actu:1
liste.lien_profil_actu.out = 3:curseur:102

#Liste des CA d'un utilisateur ls_ca_ligne_bip.sql, eSyntheseCoutRf.jsp 
liste.ca_utilisateur = PACK_LISTE_CA_LIGNE_BIP.LISTER_CA_UTILISATEUR(?,?)
liste.ca_utilisateur.in = 1:userid:96
liste.ca_utilisateur.out = 2:curseur:102

#Liste des CA de niveau 0 d'un utilisateur ls_ca_ligne_bip.sql, eFactIntRf.jsp 
liste.ca_utilisateur_niv0 = PACK_LISTE_CA_LIGNE_BIP.LISTER_CA_NIV0_UTILISATEUR(?,?)
liste.ca_utilisateur_niv0.in = 1:userid:96
liste.ca_utilisateur_niv0.out = 2:curseur:102

#Liste des CA du rtfe d'un utilisateur  
liste.ca_utilisateur_rtfe_ref = PACK_LISTE_CA_LIGNE_BIP.LISTER_CA_UTILISATEUR_RTFE_REF(?,?)
liste.ca_utilisateur_rtfe_ref.in = 1:ca_payeur:1
liste.ca_utilisateur_rtfe_ref.out = 2:curseur:102

#Liste des CA de niveau 0 d'un utilisateur PACK_SUIVI_INVESTISSEMENT
liste.ca_inv_niv0 = PACK_SUIVI_INVESTISSEMENT.LISTER_CA_NIV0_UTILISATEUR(?,?)
liste.ca_inv_niv0.in = 1:userid:1
liste.ca_inv_niv0.out = 2:curseur:102

#Liste des CA de l'utilisateur en fonction de son niveau
liste.ca_inv_g = PACK_SUIVI_INVESTISSEMENT.LISTER_GLOBAL_CA_UTILISATEUR(?,?)
liste.ca_inv_g.in = 1:ca_suivi:1
liste.ca_inv_g.out = 2:curseur:102

################### Outil de reestime par ressources ##########################
liste.activite = PACK_LISTE_ACTIVITES.LISTER_ACTIVITES_DPG(?,?,?)
liste.activite.in = 1:codsg:1;2:userid:96
liste.activite.out = 3:curseur:102

liste.activiteLigne = PACK_LISTE_ACTIVITES.LISTER_LIGNE_DPG(?,?,?,?)
liste.activiteLigne.in = 1:codsg:1;2:code_activite:1;3:userid:96
liste.activiteLigne.out = 4:curseur:102

# liste des ressources d'un groupe
liste.ressgroupe = PACK_REE_RESS.RESS_GROUPE(?,?,?)
liste.ressgroupe.in = 1:codsg:1;2:userid:96
liste.ressgroupe.out = 3:curseur:102

liste.ressact = PACK_REE_RESS_ACT.LISTER_RESS_DPG(?,?,?)
liste.ressact.in = 1:codsg:1;2:userid:96
liste.ressact.out = 3:curseur:102

liste.ressLigne = PACK_REE_RESS_ACT.LISTER_LIGNE_ACT(?,?,?,?)
liste.ressLigne.in = 1:codsg:1;2:code_ress:1;3:userid:96
liste.ressLigne.out = 4:curseur:102

liste.ressfict = PACK_REE_RESS.RESS_FICT_LISTE(?,?,?)
liste.ressfict.in = 1:codsg:1;2:userid:96
liste.ressfict.out = 3:curseur:102

# liste des scénarios d'un groupe
liste.scenarios = PACK_LISTE_SCENARIOS.LISTER_SCENARIOS_DPG(?,?,?)
liste.scenarios.in = 1:codsg:1;2:userid:96
liste.scenarios.out = 3:curseur:102

# FAD PPM 65042 : Création d'une nouvelle liste dynamique pour ne pas impacter l'appels des autres jsp
liste.scenarios2 = PACK_LISTE_SCENARIOS.LISTER_SCENARIOS_DPG_GEN(?,?,?)
liste.scenarios2.in = 1:codsg:1;2:userid:96
liste.scenarios2.out = 3:curseur:102

# liste des ressources d'un groupe
liste.ressdpg = PACK_REE_SAISIE.LISTE_RESS_DPG(?,?,?)
liste.ressdpg.in = 1:codsg:1;2:userid:96
liste.ressdpg.out = 3:curseur:102;

# liste des scénarios d'un groupe
liste.scenariossaisie = PACK_REE_SAISIE.LISTER_SCENARIOS_DPG(?,?,?)
liste.scenariossaisie.in = 1:codsg:1;2:userid:96
liste.scenariossaisie.out = 3:curseur:102

# liste des activités pouvant être ajouté à une ressource
liste.activiteRessAdd = PACK_REE_SAISIE.LISTER_ACTIVITES_DPG(?,?,?)
liste.activiteRessAdd.in = 1:codsg:1;2:userid:96;
liste.activiteRessAdd.out = 3:curseur:102

################### Adminitration/Budget/Saisie en Masse/Mes Lignes ##########################
# liste des clients suivant le DPG
liste.clientBudMass = PACK_PROPOSES_MASS.LISTER_CLIENT_DPG(?,?,?)
liste.clientBudMass.in = 1:codsg:1;2:userid:96;
liste.clientBudMass.out = 3:curseur:102

# liste des applications suivant le DPG
liste.appliBudMass = PACK_PROPOSES_MASS.LISTER_APPLI_DPG(?,?,?)
liste.appliBudMass.in = 1:codsg:1;2:userid:96;
liste.appliBudMass.out = 3:curseur:102

#Liste des tables de répartition
liste.table_repart = PACK_LISTE_RJH.LISTER_TABLE_REPART(?,?,?)
liste.table_repart.in = 1:userid:1;2:codsg:1
liste.table_repart.out = 3:curseur:102

#Liste des directions ME (dirmels.sql)
liste.dirme_peri = PACK_LISTE_DIRME.LISTER_DIRME_PERIMETRE(?,?)
liste.dirme_peri.in = 1:userid:1
liste.dirme_peri.out = 2:curseur:102

#Liste des DPG 
liste.codsg = PACK_LISTE_DPG_PERIME.LISTER_DPG(?,?)
liste.codsg.in = 1:coddir:1
liste.codsg.out = 2:curseur:102


################### Liste des Types BAA le 01/02/2006 ##########################

#Liste des types de domaines (branche.sql)
liste.direction = PACK_LISTE_BRANCHE.LISTER_DIRECTION(?,?)
liste.direction.in = 1:userid:1
liste.direction.out = 2:curseur:102

#Liste desc comptes(ls_rubrique.sql)
liste.compte = PACK_LISTE_RUBRIQUE.LISTER_COMPTE_TYPE(?,?,?)
liste.compte.in = 1:userid:1;2:type:1
liste.compte.out = 3:curseur:102

#Liste des types rubriques standard(ls_rubrique.sql)
liste.rubrique = PACK_LISTE_RUBRIQUE.LISTER_TYPE_RUBRIQUE(?,?)
liste.rubrique.in = 1:userid:1
liste.rubrique.out = 2:curseur:102


################### Liste des Types BAA le 18/11/2005 ##########################

#Liste des types de domaines (ls_type.sql)
liste.domaine = PACK_LISTE_TYPE.LISTER_TYPE_DOMAINE(?,?)
liste.domaine.in = 1:userid:1
liste.domaine.out = 2:curseur:102

#Liste des types de domaines selon le type de la ressource(ls_type.sql)
liste.domainetype = PACK_LISTE_TYPE.LISTER_TYPE_DOMAINE_TYPE(?,?,?)
liste.domainetype.in = 1:userid:1;2:rtype:1
liste.domainetype.out = 3:curseur:102


#Liste des types des prestations (ls_type.sql)
liste.prestation = PACK_LISTE_TYPE.LISTER_TYPE_PRESTATION(?,?,?,?)
liste.prestation.in = 1:userid:1;2:rtype:1;3:code_domaine:1
liste.prestation.out = 4:curseur:102


#Liste des types de ressources (ls_type.sql)
liste.rtype = PACK_LISTE_TYPE.LISTER_TYPE_RTYPE(?,?)
liste.rtype.in = 1:userid:1
liste.rtype.out = 2:curseur:102


#YNI FDT 970
#Liste des types des codes localisation (ls_type.sql)
liste.localisation = PACK_LISTE_TYPE.LISTER_TYPE_LOCALISATION(?,?)
liste.localisation.in = 1:userid:1
liste.localisation.out = 2:curseur:102

liste.localisationsitu = PACK_LISTE_TYPE.lister_localisation_situation(?,?,?)
liste.localisationsitu.in = 1:userid:1;2:rtype:1
liste.localisationsitu.out = 3:curseur:102

#Liste des types des codes localisation (ls_type.sql)
liste.localisationcont = PACK_LISTE_TYPE.lister_localisation_contrat(?,?,?,?)
liste.localisationcont.in = 1:userid:1;2:rtype:1;3:typeforfait:1
liste.localisationcont.out = 4:curseur:102

#YNI FDT 970
#Liste des types des modes contractuels (format long) (ls_type.sql)
liste.modeContractuelLong = PACK_LISTE_TYPE.LISTER_MODE_CONTRACTUEL_LONG(?,?,?)
liste.modeContractuelLong.in = 1:userid:1;2:rtype:1
liste.modeContractuelLong.out = 3:curseur:102

#YNI FDT 970
#Liste des types des modes contractuels (ls_type.sql)
liste.modeContractuel = PACK_LISTE_TYPE.LISTER_MODE_CONTRACTUEL(?,?,?,?)
liste.modeContractuel.in = 1:userid:1;2:rtype:1;3:localisation:1
liste.modeContractuel.out = 4:curseur:102

#YNI FDT 970
#Liste des types des modes contractuels (ls_type.sql)
liste.modeContractuelContrat = PACK_LISTE_TYPE.LISTER_MC_LONG_CONTRAT(?,?,?,?)
liste.modeContractuelContrat.in = 1:userid:1;2:typfact:1;3:rtype:1
liste.modeContractuelContrat.out = 4:curseur:102

#Liste des types des modes contractuels (format long) (ls_type.sql)
liste.modeContractuelCont = PACK_LISTE_TYPE.lister_popup_contractuel_cont(?,?,?,?,?)
liste.modeContractuelCont.in = 1:userid:1;2:rtype:1;3:localisation:1;4:typeforfait:1
liste.modeContractuelCont.out = 5:curseur:102

#Liste des 12 derniers mois (commun/listedyn.sql)
liste.last12months = PACK_LISTE_DYNAMIQUE.LISTER_12_MOIS(?)
liste.last12months.in = 
liste.last12months.out = 1:curseur:102

#Liste des 12 derniers mois avec Tout (commun/listedyn.sql)
liste.last12monthsTout = PACK_LISTE_DYNAMIQUE.LISTER_12_MOIS_TOUT(?)
liste.last12monthsTout.in = 
liste.last12monthsTout.out = 1:curseur:102


#liste des champs pour le paramètrage de l'édition LigneBip
liste.paramChampSelect = PACK_PARAMLIGNEBIP.LISTER_CHAMP_SELECT(?,?)
liste.paramChampSelect.in = 1:userid:1
liste.paramChampSelect.out = 2:curseur:102


liste.paramChamp = PACK_PARAMLIGNEBIP.LISTER_CHAMP(?,?)
liste.paramChamp.in = 1:userid:1
liste.paramChamp.out = 2:curseur:102

#Liste des siren de la table ebis_fournisseurs
liste.siren_expense = PACK_EBIS_IHM.LISTER_SIREN(?,?)
liste.siren_expense.in = 1:soccode:1
liste.siren_expense.out = 2:curseur:102

#Liste des siren de la table agences
liste.siren = PACK_CONTRAT.LISTER_SIREN_AGENCE(?,?)
liste.siren.in = 1:soccode:1
liste.siren.out = 2:curseur:102



#Liste des types de domaines (branche.sql)
liste.branche = PACK_DIRECTION.LISTER_BRANCHE(?,?)
liste.branche.in = 1:userid:1
liste.branche.out = 2:curseur:102

# ----------------------- COPI -------------------  
#Liste des toutes les dates COPI 
liste.datescopi = PACK_COPI_REFERENTIEL.LISTER_DATESCOPI(?,?)
liste.datescopi.in = 1:userid:1
liste.datescopi.out = 2:curseur:102

#Liste des toutes les dates COPI utilisé dans les budget
liste.datescopibudget = PACK_COPI_REFERENTIEL.LISTER_DATESCOPIBUDGET(?,?,?,?)
liste.datescopibudget.in = 1:userid:1;2:dpcopi:1;3:annee:1
liste.datescopibudget.out = 4:curseur:102

#Liste des DP COPI
liste.dpcopi = PACK_COPI.LISTER_DPCOPI(?,?)
liste.dpcopi.in = 1:userid:1
liste.dpcopi.out = 2:curseur:102

#Liste des Resource Test Evolution 1234
liste.resscopi = PKG_TEST_EVOLV1.SP_GET_ALL_RESOURCE_CODE(?,?,?)
liste.resscopi.out = 1:curseur:102;2:code:2;3:msg:1

#Liste des DP COPI par DPCODE
liste.dpcopipardpccode = PACK_COPI_BUDGET.lister_dpcopi_par_dp(?,?,?)
liste.dpcopipardpccode.in = 1:userid:1;2:icodproj:1
liste.dpcopipardpccode.out = 3:curseur:102

#Liste des fournisseurs COPI
liste.fourcopi = PACK_COPI_BUDGET.LISTER_FOURCOPI(?,?)
liste.fourcopi.in = 1:userid:1
liste.fourcopi.out = 2:curseur:102

#Liste des fournisseurs COPI utilisé dans budget
liste.fourcopibud = PACK_COPI_REFERENTIEL.lister_fourcopibud(?,?,?,?,?,?)
liste.fourcopibud.in = 1:userid:1;2:dpcopi:1;3:annee:1;4:datecopi:1;5:metier:1
liste.fourcopibud.out = 6:curseur:102

#Liste des codes projets spéciaux COPI
liste.codpspe = PACK_RECUP_ID.lister_cod_proj_spe(?,?)
liste.codpspe.in = 1:userid:1
liste.codpspe.out = 2:curseur:102

#Liste des DP COPI
liste.copitypedemande = PACK_COPI_BUDGET.LISTER_TYPEDEMANDE(?,?)
liste.copitypedemande.in = 1:userid:1
liste.copitypedemande.out = 2:curseur:102

#Liste des sigle de direction client_mo
liste.clisigle = PACK_COPI_REFERENTIEL.lister_direction_client(?,?)
liste.clisigle.in = 1:userid:1
liste.clisigle.out = 2:curseur:102

#Liste des distinct métiers issus de COUTS_STD_KE
liste.metierscoutske = PACK_COPI_BUDGET.lister_metier_coutske(?,?)
liste.metierscoutske.in = 1:userid:1
liste.metierscoutske.out = 2:curseur:102

#Liste des distinct métiers issus de la table budgets
liste.metierscoutskebud = PACK_COPI_BUDGET.lister_metier_coutskebudget(?,?,?,?,?)
liste.metierscoutskebud.in = 1:userid:1;2:dpcopi:1;3:annee:1;4:datecopi:1
liste.metierscoutskebud.out = 5:curseur:102

#Liste des annee présente dans budget_copi
liste.anneebud = PACK_COPI_referentiel.lister_anneeCopibud(?,?,?)
liste.anneebud.in = 1:userid:1;2:dpcopi:1
liste.anneebud.out = 3:curseur:102

#Liste Axes Stratégiques
liste.copiaxesstrategiques = PACK_COPI_referentiel.lister_axesStrategiques(?,?)
liste.copiaxesstrategiques.in = 1:userid:1
liste.copiaxesstrategiques.out = 2:curseur:102

#Liste Types Financement
liste.copitypefinancement = PACK_COPI_referentiel.lister_typeFinancement(?,?)
liste.copitypefinancement.in = 1:userid:1
liste.copitypefinancement.out = 2:curseur:102

#Liste Etapes COPI
liste.copietapes = PACK_COPI_referentiel.lister_EtapesDpCopi(?,?)
liste.copietapes.in = 1:userid:1
liste.copietapes.out = 2:curseur:102


#Liste des siren de la table agence
liste.siren_agence = PACK_SOCIETE.LISTER_SIREN_AGENCE(?,?)
liste.siren_agence.in = 1:socnou:1
liste.siren_agence.out = 2:curseur:102

#Liste les noms des shell
liste.nom_shell = pack_batch_logs_bip.lister_nom_shell(?)
liste.nom_shell.in = 
liste.nom_shell.out = 1:curseur:102

# liste des ressources d'un groupe
liste.ress_dpg = PACK_LISTE_RESSOURCE.LISTE_RESS_DPG(?,?,?)
liste.ress_dpg.in = 1:codsg:1;2:userid:96
liste.ress_dpg.out = 3:curseur:102;

# FAD PPM 60955 : liste des rejets P@C des ressources et contrats de la dernière exécution
liste.libelle_rejet_pac = PACK_LISTE_RESSOURCE.LISTER_REJETS_RESS_CONTRAT(?,?,?,?,?)
liste.libelle_rejet_pac.in = 1:userid:1;2:menuid:1;3:perimme:1;4:centre_frais:1
liste.libelle_rejet_pac.out = 5:curseur:102

# liste des ressources d'un groupe
liste.pid = PACK_LISTE_PID.LISTE_PID(?,?,?)
liste.pid.in = 1:codsg:1;2:userid:96
liste.pid.out = 3:curseur:102;

# liste des dpsg en fonction du perim_me
liste.dpg_perim_me = PACK_LISTE_DPG_PERIME.lister_total_dpg(?,?)
liste.dpg_perim_me.in = 1:userid:1
liste.dpg_perim_me.out = 2:curseur:102

# liste des dossier projets en fonction des utilisateurs
liste.dosproj_user = PACK_RECUP_ID.lister_dos_proj_user(?,?)
liste.dosproj_user.in = 1:userid:1
liste.dosproj_user.out = 2:curseur:102

# Liste des code remontee de la table contact_mail (DIR/Boite a outils/Gestion des @ mail)
liste.listeCodeRemontee = PACK_MAIL.lister_codremonte(?,?)
liste.listeCodeRemontee.in = 1:userid:1
liste.listeCodeRemontee.out = 2:curseur:102

#Liste des shells
liste.shell = PACK_traitement_batch.lister_shell(?,?)
liste.shell.in = 1:userid:1
liste.shell.out = 2:curseur:102

#liste type ligne pour copie du propose en masse
liste.typeligne = pack_budget_copie_propo_masse.liste_type_ligne(?,?)
liste.typeligne.in = 1:userid:1
liste.typeligne.out = 2:curseur:102

#liste type ligne pour copie du propose en masse
liste.dossproj = pack_budget_copie_propo_masse.liste_dossier_projet(?,?,?)
liste.dossproj.in = 1:userid:1;2:annee:1
liste.dossproj.out = 3:curseur:102

#liste code client pour copie du propose en masse
liste.clientpropmasse = pack_budget_copie_propo_masse.liste_client(?,?)
liste.clientpropmasse.in = 1:userid:1
liste.clientpropmasse.out = 2:curseur:102

#liste code direction pour copie du propose en masse
liste.directionpropmasse = pack_budget_copie_propo_masse.liste_direction(?,?,?,?,?,?)
liste.directionpropmasse.in = 1:userid:1;2:typeligne:1;3:dossproj:1;4:client:1;5:annee:1
liste.directionpropmasse.out = 6:curseur:102

#Administration chargement de profil RTFE (CMA 907)
liste.rtfe_users = PACK_RTFE.FIND_RTFE_USER(?,?,?,?,?)
liste.rtfe_users.in = 1:ident:1;2:debnom:1;3:nomcont:1
liste.rtfe_users.out = 4:curseur:102;5:message:1

#Administration liste des lignes d'un paramètre BIP (CMA 1087)
liste.parambip = PACK_PARAM_BIP.LISTER_LIGNES_PARAM_BIP(?,?,?,?)
liste.parambip.in = 1:codaction:1;2:codversion:1
liste.parambip.out = 3:curseur:102;4:message:1

#liste jeu paramtrage ligne bip menu saisie des réalisés
# HMI - PPM 60709 : $5.3 10/09/2015
liste.jeu = pack_isac_etape.liste_jeu(?,?,?,?,?,?,?)
liste.jeu.in = 1:userid:1;2:direction:1;3:mode:1;4:pid:1;5:etape:1
liste.jeu.out = 6:curseur:102;7:message:1

#liste code type d'étapes en fonction du jeu paramtrage ligne bip menu saisie des réalisés
# HMI - PPM 60709 : $5.3 17/09/2015
liste.type_etape_jeu = pack_isac_etape.liste_type_etape_jeu(?,?,?,?,?,?)
liste.type_etape_jeu.in = 1:userid:1;2:jeu:1;3:pid:1;4:mode:1;5:direction:1
liste.type_etape_jeu.out = 6:curseur:102

#Liste Profils de FI
liste.selectprofilfi = PACK_PROFIL_FI.LISTER_PROFIL_FI(?,?,?,?,?)
liste.selectprofilfi.in = 1:filtre_fi:1;2:filtre_date:1;3:userid:1
liste.selectprofilfi.out = 4:curseur:102;5:message:1

#Liste Détails Profils de FI
liste.detailsprofilfi = PACK_PROFIL_FI.LISTER_DETAILS_PROFIL_FI(?,?,?,?,?)
liste.detailsprofilfi.in = 1:filtre_lst_fi:1;2:filtre_date:1;3:userid:1
liste.detailsprofilfi.out = 4:curseur:102;5:message:1

#Liste axe strategique simulation immo menu reférentiel
liste.axe_strat_simul = PACK_IMMO.liste_axe_strat_user(?,?)
liste.axe_strat_simul.in = 1:userid:1
liste.axe_strat_simul.out = 2:curseur:102

#Liste type financement simulation immo menu reférentiel
liste.type_fin_simul = PACK_IMMO.liste_type_fina_user(?,?)
liste.type_fin_simul.in = 1:userid:1
liste.type_fin_simul.out = 2:curseur:102

#PPM 49169
#Liste Profils DomFonc
liste.selectprofildomfonc = PACK_PROFIL_DOMFONC.LISTER_PROFIL_DOMFONC(?,?,?,?,?)
liste.selectprofildomfonc.in = 1:filtre_domfonc:1;2:filtre_date:1;3:userid:1
liste.selectprofildomfonc.out = 4:curseur:102;5:message:1

#Liste Profils Localize
liste.selectprofillocalize = PACK_PROFIL_LOCALIZE.LISTER_PROFIL_LOCALIZE(?,?,?,?,?)
liste.selectprofillocalize.in = 1:filtre_localize:1;2:filtre_date:1;3:userid:1
liste.selectprofillocalize.out = 4:curseur:102;5:message:1

#PPM 49169
#Liste Détails Profils DomFonc
liste.detailsprofildomfonc = PACK_PROFIL_DOMFONC.LISTER_DETAILS_PROFIL_DOMFONC(?,?,?,?,?)
liste.detailsprofildomfonc.in = 1:filtre_lst_domfonc:1;2:filtre_date:1;3:userid:1
liste.detailsprofildomfonc.out = 4:curseur:102;5:message:1

#Liste Détails Profils Localize
liste.detailsprofillocalize = PACK_PROFIL_LOCALIZE.LISTER_DETAILS_PROFIL_LOCALIZE(?,?,?,?,?)
liste.detailsprofillocalize.in = 1:filtre_lst_localize:1;2:filtre_date:1;3:userid:1
liste.detailsprofillocalize.out = 4:curseur:102;5:message:1

#PPM 58143 SEL 23/05/2014 8.6
#Liste des directions à DBS obligatoire 
liste.listerclientsdbs = PACK_LIGNE_BIP.LISTER_CLIENTS_DBS(?,?,?)
liste.listerclientsdbs.in = 1:userid:1
liste.listerclientsdbs.out = 2:curseur:102;3:message:1

#HMI PPM 62325 $4.3
liste.suivi_budg_dossier_projet = pack_dossier_projet.liste_dossier_projet(?,?,?,?,?,?)
liste.suivi_budg_dossier_projet.in = 1:userid:1;2:p_param7:1;3:p_param6:1;4:p_param8:1
liste.suivi_budg_dossier_projet.out = 5:msgErreur:1;6:curseur:102

liste.dossier_projet_copi = pack_dossier_projet.liste_dossier_projet_copi(?,?,?,?,?,?)
liste.dossier_projet_copi.in = 1:userid:1;2:p_param7:1;3:p_param6:1;4:p_param8:1
liste.dossier_projet_copi.out = 5:msgErreur:1;6:curseur:102

liste.ref_demande = pack_dossier_projet.liste_ref_demande(?,?,?,?,?)
liste.ref_demande.in = 1:userid:1;2:p_param7:1;3:p_param6:1;4:p_param8:1
liste.ref_demande.out = 5:curseur:102

#FIN HMI PPM 62325 $4.3

#SEL PPM 63412
#Liste des DP COPI par DPCODE
liste.dpcopipardpccode2 = PACK_LIGNE_BIP.lister_dpcopi_par_dp(?,?,?)
liste.dpcopipardpccode2.in = 1:userid:1;2:dpcode:1
liste.dpcopipardpccode2.out = 3:curseur:102

#Liste des projets pour un dossier projet donné : ls_projet.sql
liste.projet2 = PACK_LIGNE_BIP.LISTER_PROJET(?,?,?,?)
liste.projet2.in = 1:userid:1;2:dpcode:1;3:dpcopi:1
liste.projet2.out = 4:curseur:102
