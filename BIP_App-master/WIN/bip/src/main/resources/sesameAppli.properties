# nom de l'application
ApplicationName=bip

##################################################################################
# Propriétés pour le SSO
##################################################################################
#
# durée de la session applicative,
# si inférieure à la durée globale des session applicatives (Optionnel)
ApplicationCheckoutMinutes=30
#
# URL de la page applicative de traitement des erreurs
UrlError=http://192.128.162.218:8288/jsp/erreur.jsp
#
# URL absolue de l'application (Optionnel)
#UrlApplication=http://localhost/ssoClient
#
# Timeout max des requètes HTTP (millisecondes)
Timeout=60000
#
# Noms des attribut recherchés par la fonction SsoGetAttributes 
SsoAttribut=sn givenName sgGroupId uid

##################################################################################
# Propriétés pour sésame
##################################################################################
#
# Nom du log
LogName=sesame
#
# Format des logs de service
LogFormat=service={0} appli={1} uid={2} appRes={3} userRes={4} status={5} 
#
# Nom du serveur du service d’acces
RtfeName=rtfe
#
# format pour les dates
DateFormat=dd-MM-yyyy HH:mm:ss
#
# Fichier contenant l’importation du certificat du serveur de service d’accès.
# Si fichier different du fichier par défaut.
#TrustStore=/applis/bip/bipServer/repwar_bip/WEB-INF/classes/sesame.store
#
# Mot de passe du fichier.
# Si fichier different du fichier par défaut.
#TrustStorePassword=changeit
#
# propriete ssl systeme
#java.protocol.handler.pkgs=com.sun.net.ssl.internal.www.protocol
#                          
# Nom de la classe utilisée en tant que client HTTP
# ( doit implémenter l'interface com.cocgen.rtfe.client.HttpClient)
ClientClassName=com.socgen.sesame.httpclient.HttpClientRtfe
#ClientClassName=com.socgen.sesame.httpclient.HttpClientCommons
#
# Les paramètres ClientPool* concernent les pool de HttpClient de connexion
# aux services d'accès
# Un pool par url est automatiquement créé et géré par un manager.
#
# nombre max d’instances de classe en sommeil
ClientPoolMaxIdle=100
#
# nombre max d’instances de classe actives
ClientPoolMaxActive=100
#
# durée maximum d’attente de disponibilité d’une instance de classe
ClientPoolMaxWaitTimeMillis=60000
#
# durée minimum avant qu’une instance de classe en sommeil soit détruite
ClientPoolMinEvictableIdleTimeMillis=600000
#
# durée entre 2 lancements d’un thread de destruction d’instance en sommeil
ClientPoolTimeBetweenEvictionRunsMillis=300000
#
# accessors
#
# nom la classe du service d’authentification
Authentification=AuthentificationService
#
# nom la classe du service de recherche d’attributs
Attributs=AttributsService
#
# nom la classe du service d’habilitation simple
HabilitationSimple=HabilitationService
#
# nom la classe du service d’habilitation complexe
HabilitationComplexe=HabilitationCplxService
#
# nom la classe du service de changement de code confidentiel
ChangePassword=PasswordService
#
#
# Les paramètres ServicePool* ne concernent que l’utilisation des classes
# ServiceManager ou SingletonServiceManager.
# Un pool par type de service est alors automatiquement créé et géré
# par le manager.
#
# nombre max d’instances de classe en sommeil
ServicePoolMaxIdle=100
#
# nombre max d’instances de classe actives
ServicePoolMaxActive=100
#
# durée maximum d’attente de disponibilité d’une instance de classe
ServicePoolMaxWaitTimeMillis=60000
#
# durée minimum avant qu’une instance de classe en sommeil soit détruite
ServicePoolMinEvictableIdleTimeMillis=600000
#
# durée entre 2 lancements d’un thread de destruction d’instance en sommeil
ServicePoolTimeBetweenEvictionRunsMillis=300000
#